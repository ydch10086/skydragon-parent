<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:aop="http://www.springframework.org/schema/aop" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd 
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.1.xsd 
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd 
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
     <!-- 在spring-context.xml文件中已经配置了,如果再再此处添加将导致bean被创建两次,故要在此处配置只生成action相关的bean.在spring配置中排除
	生成action相关的bean -->
	<context:component-scan base-package="com.ane.report.**.action" use-default-filters="false">
		<context:include-filter type="annotation" 
			expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" 
			expression="org.springframework.web.bind.annotation.RestController"/>
		<context:include-filter type="annotation" 
			expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	
	<mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <!-- StringHttpMessageConverter编码为UTF-8，防止乱码 -->
           <ref bean="stringConverter"/>
            <ref bean="jsonConverter"/>
        </mvc:message-converters>

    </mvc:annotation-driven>
	<!-- 解决静态资源被拦截的问题 -->
	<mvc:default-servlet-handler/>
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/bootstrap-3.3.5/**"/>
			<mvc:exclude-mapping path="/image/**"/>
			<mvc:exclude-mapping path="/js/**"/>
			<mvc:exclude-mapping path="/css/**"/>
			<ref bean="sessionInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 用于将对象转换为 JSON  -->
	<bean id="stringConverter"
        class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
            </list>
        </property>
    </bean>
	<bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="objectMapper" value="#{jsonUtil.objMapper}"/> 
		<!-- <property name="objectMapper">
			<bean class="com.ane.report.common.util.JsonObjectMapper"></bean>
		</property> -->
		<property name="supportedMediaTypes">  
	        <list>  
	            <value>text/json;charset=UTF-8</value>  
	        </list>  
        </property>
	</bean>
	
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/view/jsp/</value>
		</property>
		
		<property name="suffix">
			<value>.jsp</value>
		</property>
		<property name="order" value="256"/>
	</bean>
	
	<!-- spring mvc 多附件上传,使用自定义的resolver -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
		<property name="defaultEncoding" value="utf-8"></property>   
		<property name="maxUploadSize" value="10485760000"></property>  
		<property name="maxInMemorySize" value="40960"></property>  
	</bean>
</beans>